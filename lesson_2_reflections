1)What happens when you initialize a repository? Why do you need to do it?
A directory name .git will be created. To create a git repository.

2)How is the staging area different from working directory and 
repository? What value do you  think it offers?

It stores file included in the working directory and not yet to be 
submiited to repository. It makes more easier to operator files to be 
commited, like add and remove files before we finally commited.

3)How can you use staging area to make sure you have one commit per 
logical change?

Right before you commit, you can use git diff --staged to see if the 
change is subjected to a logical change.

4)What are some situations when branches would be helpful in keeping your 
history organized?
It can let you label different type of code. So that you can navigate and 
manage the history easily.

5)How do the diagram help you visualize the branch structure?
Because it lists both the same and different part of branches in the 
same place.

6)What is the result of merging two branches together? Why do we 
represent it in the diagram the way we do?
The commit enlisted in the master branch ordered in the time stamp. So 
that we can see the other line of commits were merged into.

7)What are the pros and cons of Git's automatically merging vs. always doing merge manually?
Git's merging help you to prevent tedious eyeball comparing but doing merge manually gives you a detailed picture of code.

Commands: 

git init, to initialize a directory as git repository.
git add, to add a file to staging area, have it prepared to submit to a commit.
git status, check the status in staging area and working directory, including untracked file and file to be committed.
git log - -oneline - -graph - -all, display all the commit in oneline format and hierarchy.
git checkout master, to get back to the latest version.
git reflog, check the recent committed history.
git show, compare the commit with its parent.
git branch -d ‘branch name’, delete the label of the branch.
git log -n 1, display only the current 1 commit.
git remote, to check the remotes on github.
git remote add REMOTENAME https/ssh-link, to add a new remote.
git remote remove REMOTENAME, to remove remote.
git push REMOTENAME LOCALREPO, to push a local repository onto remote.
git reset - -hard, undo all changes before committing, no roll back, be careful!
git merge branch1 branch2, branch2 get merged into branch1
